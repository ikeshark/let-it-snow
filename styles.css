:root {
  --position: 0rem;
  --increment: 10rem;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.flex-center, body {
  display: flex;
  align-items: center;
  justify-content: center;
}
.w-full {
  width: 100%;
}

body {
  height: 100vh;
  width: 100vw;
  background: darkslategrey;
}

/* SNOWPERSON */
.wrapper {
  z-index: 1;
  margin-top: 3rem;
}
.body, .legs, .head {
  border-radius: 50%;
  border: 2px lightgrey solid;
  background: radial-gradient(white, beige, slategrey);
  margin: -15px auto;
  position: relative;
}
.body {
  width: 100px;
  height: 100px;
}
.head {
  width: 75px;
  height: 75px;
  z-index: 999;
}
.legs {
  width: 120px;
  height: 120px;
  z-index: -9;
}
.hat {
  background: black;
  height: 5px;
  z-index: 900000;
  position: relative;
}
.hat::before {
  height: 50px;
  width: 53px;
  content: '';
  position: absolute;
  background: linear-gradient(to right, black, #111111, black);
  top: -50px;
  left: 33px;
}
.eyesWrapper {
  display: flex;
}
.eyes {
  border-radius: 50%;
  background: black;
  height: 12px;
  width: 12px;
  margin: 0px 5px 15px 5px;
}
.carrot {
  position: absolute;
  border-left: transparent 5px solid;
  border-right: transparent 5px solid;
  border-top: 20px solid orange;
  bottom: 15px;
  filter: drop-shadow(0px 1px 1px #D44500);
}
.arms {
  position: absolute;
  width: 40px;
  height: 50px;
  background: transparent;
  filter: drop-shadow(1px 1px 1px grey);
}
.armL {
  border-left: 3px solid black;
  border-top: 3px solid black;
  right: 80px;
  top: 38px;
  transform: skew(-15deg) rotate(-15deg);
  transform-origin: right top;
}
.armR {
  border-right: 3px solid black;
  border-top: 3px solid black;
  left: 80px;
  top: 38px;
  transform: skew(15deg) rotate(15deg);
  transform-origin: left top;
}

/* MOVING BG */
#movingBg {
  position: fixed;
  top: 35vh;
  width: 310vw;
  transform: translateX(100vw);
}
@keyframes movingBg {
  from {transform: translateX(125vw) scale(3)}
  to {transform: translateX(-25vw) scale(3)}
}
.tree {
  width: var(--size);
  height: var(--size);
  --size: 5rem;
  --stop1: calc(var(--size) / 5.5);
  --width: 0%;
  --width2: 2%;
  --width3: 4%;
  --width4: 6%;
  --angle: 60deg;
  position: absolute;
  left: 0;
  user-select: none;
  top: 3.5rem;
  --hue: 120;
  --sat: 100%;
  --light: 25%;
  animation: movingBg 14s infinite linear both;
  background-image:
    linear-gradient(var(--angle),
      hsl(var(--hue) var(--sat) var(--light)) 0,
      hsl(var(--hue) var(--sat) calc(var(--light) * 1.05)) calc(var(--stop1) + var(--width)),
      transparent 0, transparent),
    linear-gradient(calc(var(--angle) * -1),
      hsl(var(--hue) var(--sat) var(--light)) 0,
      hsl(var(--hue) var(--sat) calc(var(--light) * 1.05)) calc(var(--stop1) + var(--width)),
      transparent 0, transparent),
    linear-gradient(var(--angle),
      hsl(var(--hue) var(--sat) var(--light)) 0,
      hsl(var(--hue) var(--sat) calc(var(--light) * 1.05)) calc(var(--stop1) + var(--width2)),
      transparent 0, transparent),
    linear-gradient(calc(var(--angle) * -1),
      hsl(var(--hue) var(--sat) var(--light)) 0,
      hsl(var(--hue) var(--sat) calc(var(--light) * 1.05)) calc(var(--stop1) + var(--width2)),
      transparent 0, transparent),
    linear-gradient(var(--angle),
      hsl(var(--hue) var(--sat) var(--light)) 0,
      hsl(var(--hue) var(--sat) calc(var(--light) * 1.05)) calc(var(--stop1) + var(--width3)),
      transparent 0, transparent),
    linear-gradient(calc(var(--angle) * -1),
      hsl(var(--hue) var(--sat) var(--light)) 0,
      hsl(var(--hue) var(--sat) calc(var(--light) * 1.05)) calc(var(--stop1) + var(--width3)),
      transparent 0, transparent),
    linear-gradient(var(--angle),
      hsl(var(--hue) var(--sat) var(--light)) 0,
      hsl(var(--hue) var(--sat) calc(var(--light) * 1.05)) calc(var(--stop1) + var(--width4)),
      transparent 0, transparent),
    linear-gradient(calc(var(--angle) * -1),
      hsl(var(--hue) var(--sat) var(--light)) 0,
      hsl(var(--hue) var(--sat) calc(var(--light) * 1.05)) calc(var(--stop1) + var(--width4)),
      transparent 0, transparent)
  ;
  background-position:
    calc(var(--size) / 2) calc(var(--size) / 2.5),
    calc(var(--size) / 2) calc(var(--size) / 2.5),
    calc(var(--size) / 2) calc(var(--size) / 1.9),
    calc(var(--size) / 2) calc(var(--size) / 1.9),
    calc(var(--size) / 2) calc(var(--size) / 1.5),
    calc(var(--size) / 2) calc(var(--size) / 1.5),
    calc(var(--size) / 2) calc(var(--size) / 1.2),
    calc(var(--size) / 2) calc(var(--size) / 1.2)
  ;
}
.tree:nth-of-type(3n) {
  --size: 6rem;
  --hue: 128;
  --sat: 79%;
  --light: 32%;
  animation-duration: 12s;
  z-index: 2;
  top: 2.5rem;
}
/* deepest */
.tree:nth-of-type(3n + 1) {
  --size: 3.7rem;
  --hue: 120;
  --sat: 100%;
  --light: 22.5%;
  animation-duration: 16s;
  animation-delay: 1s;
  top: 5rem;
  z-index: 0;
}
.tree:nth-of-type(3n + 2) {
  z-index: 1;
  animation-delay: 2s;
}

.tree:nth-of-type(5n + 1) {
  animation-delay: 3s;
}
.tree:nth-of-type(5n + 2) {
  animation-delay: 4s;
}
.tree:nth-of-type(5n + 3) {
  animation-delay: 5s;
}
.tree:nth-of-type(5n + 4) {
  animation-delay: 6s;
}

.tree:nth-of-type(7n + 1) {
  animation-delay: 7.5s;
}
.tree:nth-of-type(7n + 2) {
  animation-delay: 8.5s;
}
.tree:nth-of-type(7n + 3) {
  animation-delay: 9.5s;
}
.tree:nth-of-type(7n + 4) {
  animation-delay: 10.5s;
}

/* SNOWSCAPE AND SNOWFLAKES */
.snowScape {
  background: beige;
  bottom: 0;
  height: 40vh;
  position: fixed;
  z-index: -1;
}
.snowflake {
  cursor: default;
  font-size: 1em;
  line-height: 0;
  position: fixed;
  transform: translateY(-60vh);
  user-select: none;
  z-index: -9;
  text-shadow: -7vw -10vh 0 currentColor,
               0vw -20vh 0 currentColor,
               -15vw -30vh 0 currentColor;
}


.snowflake:nth-of-type(3n) {
  font-size: 1.15em;
  animation-duration: 9s;
  color: #f5f5f5;
}
/* deepest */
.snowflake:nth-of-type(3n + 1) {
  font-size: 0.85em;
  animation-duration: 13s;
  color: #808080;
  /* z-index: -999; */
}
.snowflake:nth-of-type(3n + 2) {
  color: #bbb;
  /* z-index: -99; */
}

/* HOW TO SCREEN */
.howTo {
  background: white;
  flex-wrap: wrap;
  height: 100vh;
  left: 0;
  padding: 40vh 20vh;
  position: fixed;
  top: 0;
  z-index: 999999999;
}
.btn {
  border: 3px solid black;
  font-size: 3em;
  height: 66px;
  margin: 1%;
  position: relative;
  text-align: center;
  width: 165px;
}
.btn::before {
  border: 2px solid darkslategrey;
  box-shadow: 0 0 7px 2px grey;
  content: '';
  height: 80%;
  left: 3.5%;
  position: absolute;
  top: 7%;
  width: 90%;
}
.btn::after {
  font-size: 0.45em;
  left: 0;
  position: absolute;
  text-align: center;
  width: 100%;
}

.howToUp {
  margin: 1% auto;
}
.howToUp::after {
  content: 'bounce';
  top: -5vh;
}
.howToDown::after {
  content: 'slide';
  top: 10vh;
}
.howToRight::after {
  content: 'move right';
  top: 10vh;
}
.howToLeft::after {
  content: 'move left';
  top: 10vh;
}

/* ANIMATION */
@keyframes bounce {
  from {transform: translateX(var(--position)) translateY(0px)}
  to {transform: translateX(var(--position)) translateY(-10px)}
}
.bounce {
  animation: bounce .1s 5 alternate ease-in-out;
}

@keyframes freakOut {
  0% {margin-top: -15px}
  20% {margin: 0}
}
.freakOut {
  animation: freakOut .25s 3 alternate linear;
}
@keyframes slideBody {
  25% {transform: translateX(calc(var(--position) + 6rem)) translateY(-2rem) rotate(-85deg)}
  75% {transform: translateX(calc(var(--position) + 6rem)) translateY(-2rem) rotate(-85deg)}
  to {transform: translateX(var(--position)) rotate(0deg)}
}
.slideBody {
  transform-origin: center bottom;
  animation: slideBody 1s linear;
}
@keyframes slideArm {
  25% {transform: rotateX(175deg) rotate(-35deg)}
  75% {transform: rotateX(175deg) rotate(-35deg)}
  to {transform: rotate(0deg)}
}
.slideArm {
  animation: slideArm 1s linear;
}
@keyframes wave {
  0% {}
  50% {transform: rotateX(-180deg)}
  65% {transform: rotateX(-180deg) skewX(15deg)}
  72% {transform: rotateX(-180deg) skewX(-15deg)}
  89% {transform: rotateX(-180deg) skewX(15deg)}
  100% {transform: rotateX(-180deg) skewX(-15deg)}
}
.wave {
  animation: wave 1s ease-out;
}

@keyframes moveLeft {
  0% {transform: translateX(var(--position))}
  25% {transform: translateX(var(--position)) rotate(-10deg)}
  75% {transform: translateX(calc(var(--position) - var(--increment))) rotate(-10deg)}
  100% {transform: translateX(calc(var(--position) - var(--increment)))}
}
.moveLeft {
  animation: moveLeft 0.65s linear;
  animation-fill-mode: forwards;
}

@keyframes moveRight {
  0% {}
  25% {transform: translateX(var(--position)) rotate(10deg)}
  75% {transform: translateX(calc(var(--position) + var(--increment))) rotate(10deg)}
  100% {transform: translateX(calc(var(--position) + var(--increment)))}
}
.moveRight {
  animation: moveRight 0.65s linear;
  animation-fill-mode: forwards;
}
/* this is used to actually move the snowperson */
.transformX {
  transform: translateX(var(--position));
}

@keyframes snowflakes-fall {
  0% {transform: translate(5vw, -60vh) }
  100% {transform: translate(10vw, 40vh)}
}
.snowflake {
  animation: snowflakes-fall 11s infinite linear;
}

/* QUERIES */
@media screen and (max-width: 765px) {
  .howTo {
    display: none;
  }
  .wrapper {
    margin-top: 3rem;
  }
}

.rotateEyes {
  transition: 0.3s transform ease-in-out;
  transform: translate(1.7rem, -0.2rem) rotate(-7deg) scaleX(0.9);
}
.rotateCarrot {
  transition: 0.3s transform ease-in-out;
  transform: translate(2.3rem, -0.5rem) rotate(-87deg);
}
@keyframes rotateArmL {
  from {transform: translate(1.7rem, -0.2rem) skew(-15deg) rotate(-36deg)}
  to {transform: translate(1.7rem, -0.2rem) skew(-15deg) rotate(-146deg)}
}
@keyframes rotateArmR {
  from {transform: translateX(-1rem) skew(-15deg) rotateX(-155deg) rotate(-175deg)}
  to {transform: translateX(-1rem) skew(-15deg) rotateX(-155deg) rotate(-35deg)}
}
.rotateArmL {
  animation: rotateArmL infinite alternate .5s .3s;
}
.rotateArmR {
  z-index: -1;
  transform: translateX(-1rem) skew(-15deg) rotateX(-155deg) rotate(-175deg);
  animation: rotateArmR infinite alternate .5s;
}
.hidden {display: none;}
